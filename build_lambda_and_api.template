{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates Lambda function and associated API gateway endpoints for AWS map",
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/service-role/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
          "arn:aws:iam::aws:policy/AWSLambdaExecute",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
          "arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess"
        ],
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "apigateway.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "LambdaAWSMap": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "This function reads AWS services and builds a html map as output",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "FunctionName": "AWS-html-map-service",
        "Handler": "map.lambda_handler",
        "Runtime": "python2.7",
        "Code": {
          "S3Bucket": "sdevenis-lambda",
          "S3Key": "aws-looky-loo.zip"
        }
      },
      "DependsOn": "LambdaExecutionRole"
    },
    "RestAPI": {
      "Properties": {
        "Description": "Base API Gateway for exposing DMS tasks to customers",
        "Name": "AWSHtmlMap"
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "MethodRootGET": {
      "Properties": {
        "ApiKeyRequired": "false",
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "SelectionPattern": ".*"
            },
            {
              "StatusCode": "400",
              "SelectionPattern": "BAD_REQUEST"
            },
            {
              "StatusCode": "401",
              "SelectionPattern": "NOT_AUTHORISED"
            },
            {
              "StatusCode": "403",
              "SelectionPattern": "FORBIDDEN"
            },
            {
              "StatusCode": "404",
              "SelectionPattern": "TASK_NOT_FOUND"
            },
            {
              "StatusCode": "500"
            }
          ],
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LambdaAWSMap",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {
              "application/json": "Empty"
            }
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "401"
          },
          {
            "StatusCode": "403"
          },
          {
            "StatusCode": "404"
          },
          {
            "StatusCode": "500"
          }
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "RestAPI",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "RestAPI"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "Deployment": {
      "DependsOn": [
        "MethodRootGET"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "RestAPI"
        },
        "StageName": "awshtml"
      },
      "Type": "AWS::ApiGateway::Deployment"
    }
  }
}
